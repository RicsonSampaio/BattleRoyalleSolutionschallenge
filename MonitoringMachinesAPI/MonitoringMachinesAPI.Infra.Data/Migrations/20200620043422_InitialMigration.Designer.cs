// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoringMachinesAPI.Infra.Data.Context;

namespace MonitoringMachinesAPI.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200620043422_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("MonitoringMachinesAPI.Domain.Models.Antivirus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasAntivirus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId")
                        .IsUnique();

                    b.ToTable("Antivirus");
                });

            modelBuilder.Entity("MonitoringMachinesAPI.Domain.Models.HardDrive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FreeSpace")
                        .HasColumnType("TEXT");

                    b.Property<int>("MachineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsedSpace")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("HardDrive");
                });

            modelBuilder.Entity("MonitoringMachinesAPI.Domain.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("DotNetVersion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OsVersion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("MonitoringMachinesAPI.Domain.Models.Antivirus", b =>
                {
                    b.HasOne("MonitoringMachinesAPI.Domain.Models.Machine", "Machine")
                        .WithOne("Antivirus")
                        .HasForeignKey("MonitoringMachinesAPI.Domain.Models.Antivirus", "MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MonitoringMachinesAPI.Domain.Models.HardDrive", b =>
                {
                    b.HasOne("MonitoringMachinesAPI.Domain.Models.Machine", "Machine")
                        .WithMany("HardDrive")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
